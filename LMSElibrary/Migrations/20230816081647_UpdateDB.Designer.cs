// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SubjectService.Data;

#nullable disable

namespace SubjectService.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20230816081647_UpdateDB")]
    partial class UpdateDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SubjectService.Model.BaiGiang", b =>
                {
                    b.Property<string>("IdBaiGiang")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdChuDe")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LopIdLop")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MoTa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleBaiGiang")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdBaiGiang");

                    b.HasIndex("IdChuDe");

                    b.HasIndex("LopIdLop");

                    b.ToTable("BaiGiang");
                });

            modelBuilder.Entity("SubjectService.Model.BoMon", b =>
                {
                    b.Property<string>("IdBoMon")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TenBoMon")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdBoMon");

                    b.ToTable("boMons");
                });

            modelBuilder.Entity("SubjectService.Model.ChiTietBaiGiang", b =>
                {
                    b.Property<string>("IdLop")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdBaiGiang")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("IdLop", "IdBaiGiang");

                    b.HasIndex("IdBaiGiang");

                    b.ToTable("ChitietBaiGiang", (string)null);
                });

            modelBuilder.Entity("SubjectService.Model.ChitietLop", b =>
                {
                    b.Property<string>("IdLop")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdMonHoc")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("IdLop", "IdMonHoc");

                    b.HasIndex("IdMonHoc");

                    b.ToTable("ChiTietLop", (string)null);
                });

            modelBuilder.Entity("SubjectService.Model.ChuDe", b =>
                {
                    b.Property<string>("IdChuDe")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdMonHoc")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdChuDe");

                    b.HasIndex("IdMonHoc");

                    b.ToTable("chuDes");
                });

            modelBuilder.Entity("SubjectService.Model.DanhsachLop", b =>
                {
                    b.Property<string>("IdDSLop")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdLop")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdStudent")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdDSLop");

                    b.HasIndex("IdLop");

                    b.ToTable("danhsachLops");
                });

            modelBuilder.Entity("SubjectService.Model.Lop", b =>
                {
                    b.Property<string>("IdLop")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdTeacher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenLop")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdLop");

                    b.ToTable("Lop");
                });

            modelBuilder.Entity("SubjectService.Model.MonHoc", b =>
                {
                    b.Property<string>("IdMonHoc")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdBoMon")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Mota")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NienKhoa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenMonHoc")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("TrangThai")
                        .HasColumnType("bit");

                    b.HasKey("IdMonHoc");

                    b.HasIndex("IdBoMon");

                    b.ToTable("monHocs");
                });

            modelBuilder.Entity("SubjectService.Model.Resources", b =>
                {
                    b.Property<string>("IdResources")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FileURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormatFile")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IdBaiGiang")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Mota")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayGui")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiDuyet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoteRes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TinhTrangDuyet")
                        .HasColumnType("bit");

                    b.HasKey("IdResources");

                    b.HasIndex("IdBaiGiang");

                    b.ToTable("Resources");
                });

            modelBuilder.Entity("SubjectService.Model.ThongtinMonHoc", b =>
                {
                    b.Property<string>("IdThongtin")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdMonHoc")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TieuDe")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdThongtin");

                    b.HasIndex("IdMonHoc");

                    b.ToTable("thongtinMonhoc");
                });

            modelBuilder.Entity("SubjectService.Model.BaiGiang", b =>
                {
                    b.HasOne("SubjectService.Model.ChuDe", "chuDe")
                        .WithMany("documents")
                        .HasForeignKey("IdChuDe")
                        .HasConstraintName("FK_baigiang_chude");

                    b.HasOne("SubjectService.Model.Lop", null)
                        .WithMany("documents")
                        .HasForeignKey("LopIdLop");

                    b.Navigation("chuDe");
                });

            modelBuilder.Entity("SubjectService.Model.ChiTietBaiGiang", b =>
                {
                    b.HasOne("SubjectService.Model.BaiGiang", "baiGiang")
                        .WithMany("ctbg")
                        .HasForeignKey("IdBaiGiang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ctbaigiang_baigiang");

                    b.HasOne("SubjectService.Model.Lop", "lop")
                        .WithMany("ctbg")
                        .HasForeignKey("IdLop")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ctbg_lop");

                    b.Navigation("baiGiang");

                    b.Navigation("lop");
                });

            modelBuilder.Entity("SubjectService.Model.ChitietLop", b =>
                {
                    b.HasOne("SubjectService.Model.Lop", "lop")
                        .WithMany("ctlop")
                        .HasForeignKey("IdLop")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ctlop_lop");

                    b.HasOne("SubjectService.Model.MonHoc", "monHoc")
                        .WithMany("ctlop")
                        .HasForeignKey("IdMonHoc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_ctlop_monhoc");

                    b.Navigation("lop");

                    b.Navigation("monHoc");
                });

            modelBuilder.Entity("SubjectService.Model.ChuDe", b =>
                {
                    b.HasOne("SubjectService.Model.MonHoc", "monHoc")
                        .WithMany("topics")
                        .HasForeignKey("IdMonHoc")
                        .HasConstraintName("FK_chude_monhoc");

                    b.Navigation("monHoc");
                });

            modelBuilder.Entity("SubjectService.Model.DanhsachLop", b =>
                {
                    b.HasOne("SubjectService.Model.Lop", "lop")
                        .WithMany("dslop")
                        .HasForeignKey("IdLop")
                        .HasConstraintName("FK_dslop_lop");

                    b.Navigation("lop");
                });

            modelBuilder.Entity("SubjectService.Model.MonHoc", b =>
                {
                    b.HasOne("SubjectService.Model.BoMon", "BoMon")
                        .WithMany("MonHocs")
                        .HasForeignKey("IdBoMon")
                        .HasConstraintName("FK_MonHoc_BoMon");

                    b.Navigation("BoMon");
                });

            modelBuilder.Entity("SubjectService.Model.Resources", b =>
                {
                    b.HasOne("SubjectService.Model.BaiGiang", "baiGiang")
                        .WithMany("resources")
                        .HasForeignKey("IdBaiGiang")
                        .HasConstraintName("FK_res_baigiang");

                    b.Navigation("baiGiang");
                });

            modelBuilder.Entity("SubjectService.Model.ThongtinMonHoc", b =>
                {
                    b.HasOne("SubjectService.Model.MonHoc", "monHoc")
                        .WithMany("ttmh")
                        .HasForeignKey("IdMonHoc")
                        .HasConstraintName("FK_ttmh_monhoc");

                    b.Navigation("monHoc");
                });

            modelBuilder.Entity("SubjectService.Model.BaiGiang", b =>
                {
                    b.Navigation("ctbg");

                    b.Navigation("resources");
                });

            modelBuilder.Entity("SubjectService.Model.BoMon", b =>
                {
                    b.Navigation("MonHocs");
                });

            modelBuilder.Entity("SubjectService.Model.ChuDe", b =>
                {
                    b.Navigation("documents");
                });

            modelBuilder.Entity("SubjectService.Model.Lop", b =>
                {
                    b.Navigation("ctbg");

                    b.Navigation("ctlop");

                    b.Navigation("documents");

                    b.Navigation("dslop");
                });

            modelBuilder.Entity("SubjectService.Model.MonHoc", b =>
                {
                    b.Navigation("ctlop");

                    b.Navigation("topics");

                    b.Navigation("ttmh");
                });
#pragma warning restore 612, 618
        }
    }
}
