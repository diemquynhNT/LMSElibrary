// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SubjectService.Data;

#nullable disable

namespace SubjectService.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20230815112935_DBSubjectUpdate")]
    partial class DBSubjectUpdate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SubjectService.Model.BoMon", b =>
                {
                    b.Property<string>("IdBoMon")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NameBoMon")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdBoMon");

                    b.ToTable("BoMons");
                });

            modelBuilder.Entity("SubjectService.Model.DetailClass", b =>
                {
                    b.Property<string>("IdDetailClass")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdClass")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdStudent")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdDetailClass");

                    b.HasIndex("IdClass");

                    b.ToTable("DetailClass");
                });

            modelBuilder.Entity("SubjectService.Model.Document", b =>
                {
                    b.Property<string>("IdDocument")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdClass")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdTopic")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TitleDoc")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdDocument");

                    b.HasIndex("IdClass");

                    b.HasIndex("IdTopic");

                    b.ToTable("Document");
                });

            modelBuilder.Entity("SubjectService.Model.Resources", b =>
                {
                    b.Property<string>("IdResources")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Describe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormatFile")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IdDocument")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NoteRes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usercheck")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("sentdate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("statusResource")
                        .HasColumnType("tinyint");

                    b.HasKey("IdResources");

                    b.HasIndex("IdDocument");

                    b.ToTable("Resources");
                });

            modelBuilder.Entity("SubjectService.Model.Subject", b =>
                {
                    b.Property<string>("IdSubject")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Describe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdBoMon")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NameSubject")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SchoolYear")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("Status")
                        .HasColumnType("tinyint");

                    b.HasKey("IdSubject");

                    b.HasIndex("IdBoMon");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("SubjectService.Model.SubjectClass", b =>
                {
                    b.Property<string>("IdClass")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdSubject")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdTeacher")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameClass")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdClass");

                    b.HasIndex("IdSubject");

                    b.ToTable("Class");
                });

            modelBuilder.Entity("SubjectService.Model.Topic", b =>
                {
                    b.Property<string>("IdTopic")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdSubject")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdTopic");

                    b.HasIndex("IdSubject");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("SubjectService.Model.DetailClass", b =>
                {
                    b.HasOne("SubjectService.Model.SubjectClass", "SubjectClass")
                        .WithMany("DetailClasses")
                        .HasForeignKey("IdClass")
                        .HasConstraintName("FK_detailclasst_class");

                    b.Navigation("SubjectClass");
                });

            modelBuilder.Entity("SubjectService.Model.Document", b =>
                {
                    b.HasOne("SubjectService.Model.SubjectClass", "subclass")
                        .WithMany("documents")
                        .HasForeignKey("IdClass")
                        .HasConstraintName("FK_documents_class");

                    b.HasOne("SubjectService.Model.Topic", "topics")
                        .WithMany("documents")
                        .HasForeignKey("IdTopic")
                        .HasConstraintName("FK_documents_topic");

                    b.Navigation("subclass");

                    b.Navigation("topics");
                });

            modelBuilder.Entity("SubjectService.Model.Resources", b =>
                {
                    b.HasOne("SubjectService.Model.Document", "documents")
                        .WithMany("resources")
                        .HasForeignKey("IdDocument")
                        .HasConstraintName("FK_document_res");

                    b.Navigation("documents");
                });

            modelBuilder.Entity("SubjectService.Model.Subject", b =>
                {
                    b.HasOne("SubjectService.Model.BoMon", "BoMon")
                        .WithMany("subjects")
                        .HasForeignKey("IdBoMon")
                        .HasConstraintName("FK_Subject_BoMon");

                    b.Navigation("BoMon");
                });

            modelBuilder.Entity("SubjectService.Model.SubjectClass", b =>
                {
                    b.HasOne("SubjectService.Model.Subject", "Subjects")
                        .WithMany("subjectclass")
                        .HasForeignKey("IdSubject")
                        .HasConstraintName("FK_class_subject");

                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("SubjectService.Model.Topic", b =>
                {
                    b.HasOne("SubjectService.Model.Subject", "subjects")
                        .WithMany("topics")
                        .HasForeignKey("IdSubject")
                        .HasConstraintName("FK_topic_subject");

                    b.Navigation("subjects");
                });

            modelBuilder.Entity("SubjectService.Model.BoMon", b =>
                {
                    b.Navigation("subjects");
                });

            modelBuilder.Entity("SubjectService.Model.Document", b =>
                {
                    b.Navigation("resources");
                });

            modelBuilder.Entity("SubjectService.Model.Subject", b =>
                {
                    b.Navigation("subjectclass");

                    b.Navigation("topics");
                });

            modelBuilder.Entity("SubjectService.Model.SubjectClass", b =>
                {
                    b.Navigation("DetailClasses");

                    b.Navigation("documents");
                });

            modelBuilder.Entity("SubjectService.Model.Topic", b =>
                {
                    b.Navigation("documents");
                });
#pragma warning restore 612, 618
        }
    }
}
